name: Update IPTV playlists

on:
    push:
        branches: ["main"]
        paths: "scripts/IPTV_playlists_functions.sh"
    pull_request:
        branches: ["main"]
        paths: "scripts/IPTV_playlists_functions.sh"
    schedule:
        - cron: "0 5,11,17,23 * * *"
    workflow_dispatch:
    watch:
        types: [started]

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
    update_playlists:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4

            - name: Update time
              run: |
                  echo "update_time=$(TZ="Asia/Bangkok" date "+%d-%m-%y at %I:%M %p")" >> $GITHUB_ENV

            - name: Update playlists
              run: scripts/update_IPTV_playlists.sh

            - name: Check empty files
              run: scripts/check_empty_files.sh

            - name: Update time in README
              run: |
                  mv -f README_m3u.md README.md
                  rm -rf ./.github ./scripts .gitignore .whitesource renovate.json .deepsource.toml _config.yml
                  sed -i "s/-   \*\*Time:\*\*.*/-   \*\*Time:\*\* ${{ env.update_time }}/" ./README.md

            - name: Push to Github
              run: |
                  git config --global user.name ${{ secrets.MY_USERNAME }}
                  git config --global user.email ${{ secrets.MY_EMAIL }}
                  git checkout --orphan m3u_modified
                  git add .
                  git commit -m "Updated on ${{ env.update_time }}"
                  if git ls-remote --exit-code --heads origin m3u; then
                    git push origin --delete m3u
                  fi
                  git branch -m m3u
                  git push -f origin m3u

    retry_if_fail:
        needs: update_playlists
        if: failure()
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v4

            - name: Update time
              run: |
                  echo "update_time=$(TZ="Asia/Bangkok" date "+%d-%m-%y at %I:%M %p")" >> $GITHUB_ENV

            - name: Update playlists
              run: scripts/update_IPTV_playlists.sh

            - name: Check empty files
              continue-on-error: true
              run: scripts/check_empty_files.sh

            - name: Update time in README
              run: |
                  mv -f README_m3u.md README.md
                  rm -rf ./.github ./scripts .gitignore .whitesource renovate.json .deepsource.toml _config.yml
                  sed -i "s/-   \*\*Time:\*\*.*/-   \*\*Time:\*\* ${{ env.update_time }}/" ./README.md

            - name: Push to Github
              run: |
                  git config --global user.name ${{ secrets.MY_USERNAME }}
                  git config --global user.email ${{ secrets.MY_EMAIL }}
                  git checkout --orphan m3u_modified
                  git add .
                  git commit -m "Updated on ${{ env.update_time }}"
                  if git ls-remote --exit-code --heads origin m3u; then
                    git push origin --delete m3u
                  fi
                  git branch -m m3u
                  git push -f origin m3u
